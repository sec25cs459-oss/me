{
  "id": "lesson-selection-sort-search",
  "version": 1,
  "module": "III",
  "title": "Selection Sort + Linear/Binary Search",
  "content": {
    "starterCode": "#include <stdio.h>\nint main(){int n; /* TODO: sort and search */ return 0;}",
    "solutionCode": "#include <stdio.h>\nvoid sel(int a[],int n){for(int i=0;i<n-1;i++){int m=i;for(int j=i+1;j<n;j++) if(a[j]<a[m]) m=j; int t=a[i]; a[i]=a[m]; a[m]=t;}} int lin(int a[],int n,int k){for(int i=0;i<n;i++) if(a[i]==k) return i; return -1;} int bin(int a[],int n,int k){int l=0,r=n-1;while(l<=r){int mid=(l+r)/2; if(a[mid]==k) return mid; if(a[mid]<k) l=mid+1; else r=mid-1;} return -1;} int main(){int n; scanf(\"%d\", &n); int a[200]; for(int i=0;i<n;i++) scanf(\"%d\", &a[i]); sel(a,n); int k; scanf(\"%d\", &k); printf(\"lin=%d bin=%d\\n\", lin(a,n,k), bin(a,n,k)); return 0;}",
    "language": "c",
    "explanations": [
      {"line": 1, "text": "Selection sort picks the smallest from the unsorted tail.", "tldr": "select min", "tags": ["arrays","sorting"]},
      {"line": 1, "text": "Linear search scans; binary search halves.", "tldr": "search", "tags": ["search"]}
    ]
  }
}

